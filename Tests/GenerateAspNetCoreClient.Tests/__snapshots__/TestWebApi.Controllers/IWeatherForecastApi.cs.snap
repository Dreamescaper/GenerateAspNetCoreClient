//<auto-generated />

using System;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using Refit;
using TestWebApi.Models;

namespace Test.Name.Space
{
    public partial interface IWeatherForecastApi
    {
        [Get("/WeatherForecast")]
        Task<IEnumerable<WeatherForecast>> Get();

        [Get("/WeatherForecast/{id}")]
        Task<WeatherForecast> Get(Guid id);

        [Post("/WeatherForecast/create")]
        Task<WeatherForecast> Post([Body] WeatherForecast weatherForecast);

        [Multipart]
        [Post("/WeatherForecast/upload")]
        Task Upload(MultipartItem uploadedFile);

        [Get("/WeatherForecast/download")]
        Task<Stream> Download();

        [Post("/WeatherForecast/search")]
        Task<WeatherForecast> Search(string name = "test");

        [Post("/WeatherForecast/{id}/queryParams")]
        Task<WeatherForecast> SomethingWithQueryParams(int id, string par2, int par1 = 2, string par3 = null, string par4 = "1");

        [Patch("/WeatherForecast/headerParams")]
        Task WithHeaderParams([Header("x-header-name")] string headerParam = null);

        [Post("/WeatherForecast/form")]
        Task WithFormParam([Body(BodySerializationMethod.UrlEncoded)] SomeQueryModel formParam = null);

        [Get("/WeatherForecast/record")]
        Task<RecordModel> WithRecordModels(Guid? id = null, string name = null);
    }
}